version: '3.7'

services:
  traefik:
    image: traefik:v2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8080:8080"
    deploy:
      placement:
        constraints: 
          - node.role == manager
    command: 
      - --providers.docker 
      - --api 
      - --api.insecure=true 
      - --providers.docker=true
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=false"

  mariadb:
    image: bitnami/mariadb:latest
    environment:
     - MARIADB_USER=bn_moodle
     - MARIADB_DATABASE=bitnami_moodle
     - MARIADB_PASSWORD=bitnami
     - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - "mariadb_data:/bitnami"
    deploy:
      placement:
        constraints: 
          - node.role == worker
    networks:
     - database
    labels:
     - "traefik.enable=false"

  moodle:
    image: adji21/moodle:latest
    environment:
     - MOODLE_DATABASE_USER=bn_moodle
     - MOODLE_DATABASE_NAME=bitnami_moodle
     - MOODLE_DATABASE_PASSWORD=bitnami
     - ALLOW_EMPTY_PASSWORD=yes
     - MOODLE_USERNAME=adji21
     - MOODLE_PASSWORD=Adminadji21
     - MOODLE_EMAIL=ikhwangaul21@gmail.com
     - MOODLE_SITE_NAME='Moodle Cluster Docker Swarm'
    volumes:
     - "moodle_data:/bitnami"
    deploy:
      placement:
        constraints: 
          - node.role == worker
    ports:
     - 8000:8080
    depends_on:
     - mariadb
    networks:
     - database
     - traefik-proxy
    labels:
     - "traefik.enable=true"
     - "traefik.http.services.moodle.loadbalancer.server.port=8080"
     - "traefik.http.routers.moodle.rule=HostRegexp(`{catchall:.*}`)"
     - "traefik.docker.network=traefik-proxy"

networks:
  database:
    driver: overlay
  traefik-proxy:
    external: true

volumes:
  mariadb_data:
  moodle_data: